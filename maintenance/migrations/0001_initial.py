# Generated by Django 5.1.7 on 2025-03-11 10:44

import django.db.models.deletion
import maintenance.models
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [("pghistory", "0006_delete_aggregateevent")]

    operations = [
        migrations.CreateModel(
            name="Departamento",
            fields=[
                (
                    "create_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="Fecha de creación"),
                ),
                (
                    "modify_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de última modificación"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                ("name", models.CharField(max_length=250, verbose_name="Nombre")),
                (
                    "codigo",
                    models.CharField(
                        max_length=8, primary_key=True, serialize=False, verbose_name="Código"
                    ),
                ),
            ],
            options={"abstract": False},
            bases=(models.Model, maintenance.models.MaintenanceMixin),
        ),
        migrations.CreateModel(
            name="DepartamentoEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                (
                    "create_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="Fecha de creación"),
                ),
                (
                    "modify_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de última modificación"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                ("name", models.CharField(max_length=250, verbose_name="Nombre")),
                ("codigo", models.CharField(max_length=8, serialize=False, verbose_name="Código")),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="Distrito",
            fields=[
                (
                    "create_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="Fecha de creación"),
                ),
                (
                    "modify_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de última modificación"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                ("name", models.CharField(max_length=250, verbose_name="Nombre")),
                (
                    "codigo",
                    models.CharField(
                        max_length=8, primary_key=True, serialize=False, verbose_name="Código"
                    ),
                ),
            ],
            options={"abstract": False},
            bases=(models.Model, maintenance.models.MaintenanceMixin),
        ),
        migrations.CreateModel(
            name="DistritoEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                (
                    "create_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="Fecha de creación"),
                ),
                (
                    "modify_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de última modificación"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                ("name", models.CharField(max_length=250, verbose_name="Nombre")),
                ("codigo", models.CharField(max_length=8, serialize=False, verbose_name="Código")),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="Provincia",
            fields=[
                (
                    "create_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="Fecha de creación"),
                ),
                (
                    "modify_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de última modificación"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                ("name", models.CharField(max_length=250, verbose_name="Nombre")),
                (
                    "codigo",
                    models.CharField(
                        max_length=8, primary_key=True, serialize=False, verbose_name="Código"
                    ),
                ),
            ],
            options={"abstract": False},
            bases=(models.Model, maintenance.models.MaintenanceMixin),
        ),
        migrations.CreateModel(
            name="ProvinciaEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                (
                    "create_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="Fecha de creación"),
                ),
                (
                    "modify_date",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de última modificación"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                ("name", models.CharField(max_length=250, verbose_name="Nombre")),
                ("codigo", models.CharField(max_length=8, serialize=False, verbose_name="Código")),
            ],
            options={"abstract": False},
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="departamento",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "maintenance_departamentoevent" ("codigo", "create_date", "is_active", "modify_date", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."codigo", NEW."create_date", NEW."is_active", NEW."modify_date", NEW."name", _pgh_attach_context(), NOW(), \'insert\', NEW."codigo"); RETURN NULL;',
                    hash="fc5257ac80a62141ad3235bb51d86e5717f269f8",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_b48f3",
                    table="maintenance_departamento",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="departamento",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "maintenance_departamentoevent" ("codigo", "create_date", "is_active", "modify_date", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."codigo", NEW."create_date", NEW."is_active", NEW."modify_date", NEW."name", _pgh_attach_context(), NOW(), \'update\', NEW."codigo"); RETURN NULL;',
                    hash="a9e8b34c6e57e855dd25c8cecfa3d7506f43db92",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_bb4d0",
                    table="maintenance_departamento",
                    when="AFTER",
                ),
            ),
        ),
        migrations.AddField(
            model_name="departamentoevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="departamentoevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="maintenance.departamento",
            ),
        ),
        migrations.AddField(
            model_name="distritoevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="distritoevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="maintenance.distrito",
            ),
        ),
        migrations.AddField(
            model_name="provincia",
            name="departamento",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="maintenance.departamento"
            ),
        ),
        migrations.AddField(
            model_name="distritoevent",
            name="provincia",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                related_query_name="+",
                to="maintenance.provincia",
            ),
        ),
        migrations.AddField(
            model_name="distrito",
            name="provincia",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="maintenance.provincia"
            ),
        ),
        migrations.AddField(
            model_name="provinciaevent",
            name="departamento",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                related_query_name="+",
                to="maintenance.departamento",
            ),
        ),
        migrations.AddField(
            model_name="provinciaevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="provinciaevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="maintenance.provincia",
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="provincia",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "maintenance_provinciaevent" ("codigo", "create_date", "departamento_id", "is_active", "modify_date", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."codigo", NEW."create_date", NEW."departamento_id", NEW."is_active", NEW."modify_date", NEW."name", _pgh_attach_context(), NOW(), \'insert\', NEW."codigo"); RETURN NULL;',
                    hash="576b277f11b95ced781d90fb1d09dc505f63b3a4",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_36064",
                    table="maintenance_provincia",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="provincia",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "maintenance_provinciaevent" ("codigo", "create_date", "departamento_id", "is_active", "modify_date", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."codigo", NEW."create_date", NEW."departamento_id", NEW."is_active", NEW."modify_date", NEW."name", _pgh_attach_context(), NOW(), \'update\', NEW."codigo"); RETURN NULL;',
                    hash="249ec42635e09e9ed40f3d5506d9c1aaf6744f89",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_1d7a9",
                    table="maintenance_provincia",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="distrito",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "maintenance_distritoevent" ("codigo", "create_date", "is_active", "modify_date", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "provincia_id") VALUES (NEW."codigo", NEW."create_date", NEW."is_active", NEW."modify_date", NEW."name", _pgh_attach_context(), NOW(), \'insert\', NEW."codigo", NEW."provincia_id"); RETURN NULL;',
                    hash="59ee208e6b048609878066e3ca4c551ff76dfbeb",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_e2634",
                    table="maintenance_distrito",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="distrito",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "maintenance_distritoevent" ("codigo", "create_date", "is_active", "modify_date", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "provincia_id") VALUES (NEW."codigo", NEW."create_date", NEW."is_active", NEW."modify_date", NEW."name", _pgh_attach_context(), NOW(), \'update\', NEW."codigo", NEW."provincia_id"); RETURN NULL;',
                    hash="1143a7f197afab25089fb7f1a74045839a539016",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_6656b",
                    table="maintenance_distrito",
                    when="AFTER",
                ),
            ),
        ),
    ]
